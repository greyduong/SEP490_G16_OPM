/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/JSP_Servlet/Servlet.java to edit this template
 */
package controller;

import dao.FarmDAO;
import dao.PigsOfferDAO;
import java.io.IOException;
import java.io.PrintWriter;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import model.Email;
import model.Farm;

/**
 *
 * @author duong
 */
@WebServlet(name = "ProcessFarmController", urlPatterns = {"/process-farm"})
public class ProcessFarmController extends HttpServlet {

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String action = request.getParameter("action");
        String idParam = request.getParameter("id");
        String page = request.getParameter("page");
        String sort = request.getParameter("sort");
        String search = request.getParameter("search");

        String queryParams = String.format("page=%s&sort=%s&search=%s",
                page == null ? "" : page,
                sort == null ? "" : sort,
                search == null ? "" : search
        );

        if (idParam == null || action == null) {
            response.sendRedirect("pending-farms?msg=" + URLEncoder.encode("Thi·∫øu d·ªØ li·ªáu y√™u c·∫ßu", StandardCharsets.UTF_8) + "&" + queryParams);
            return;
        }

        int farmId = Integer.parseInt(idParam);
        FarmDAO dao = new FarmDAO();
        Farm farm = dao.getFarmWithSellerById(farmId);

        if (farm == null || farm.getSeller() == null) {
            response.sendRedirect("pending-farms?msg=" + URLEncoder.encode("Kh√¥ng t√¨m th·∫•y trang tr·∫°i ho·∫∑c ng∆∞·ªùi b√°n", StandardCharsets.UTF_8) + "&" + queryParams);
            return;
        }

        String msg;
        try {
            if ("approve".equalsIgnoreCase(action)) {
                farm.setStatus("Active");
                farm.setNote("ƒê√£ ph√™ duy·ªát");
                boolean success = dao.updateStatusAndNote(farm);

                if (success) {
                    msg = "ƒê√£ x√°c nh·∫≠n th√†nh c√¥ng";
                    Email.sendEmail(
                            farm.getSeller().getEmail(),
                            "Trang tr·∫°i ƒë√£ ƒë∆∞·ª£c ph√™ duy·ªát",
                            "Xin ch√†o " + farm.getSeller().getFullName()
                            + ",\n\nTrang tr·∫°i \"" + farm.getFarmName() + "\" c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ph√™ duy·ªát v√† ƒëang ho·∫°t ƒë·ªông tr√™n h·ªá th·ªëng."
                            + "\n\nTr√¢n tr·ªçng,\nOnline Pig Market"
                    );
                } else {
                    msg = "X√°c nh·∫≠n th·∫•t b·∫°i";
                }

            } else if ("reject".equalsIgnoreCase(action)) {
                String note = request.getParameter("note");
                if (note == null || note.trim().isEmpty()) {
                    response.sendRedirect("pending-farms?msg=" + URLEncoder.encode("Vui l√≤ng nh·∫≠p l√Ω do t·ª´ ch·ªëi", StandardCharsets.UTF_8) + "&" + queryParams);
                    return;
                }

                farm.setStatus("Cancel");
                farm.setNote(note.trim());
                boolean success = dao.updateStatusAndNote(farm);

                if (success) {
                    msg = "ƒê√£ t·ª´ ch·ªëi trang tr·∫°i";
                    Email.sendEmail(
                            farm.getSeller().getEmail(),
                            "Trang tr·∫°i b·ªã t·ª´ ch·ªëi",
                            "Xin ch√†o " + farm.getSeller().getFullName()
                            + ",\n\nTrang tr·∫°i \"" + farm.getFarmName() + "\" c·ªßa b·∫°n ƒë√£ b·ªã t·ª´ ch·ªëi v·ªõi l√Ω do:\n\n"
                            + note.trim()
                            + "\n\nVui l√≤ng ki·ªÉm tra l·∫°i v√† t·∫°o l·∫°i y√™u c·∫ßu m·ªõi n·∫øu c·∫ßn."
                            + "\n\nTr√¢n tr·ªçng,\nOnline Pig Market"
                    );
                } else {
                    msg = "T·ª´ ch·ªëi th·∫•t b·∫°i";
                }

            } else if ("ban".equalsIgnoreCase(action)) {

                String note = request.getParameter("note");
                if (note == null || note.trim().isEmpty()) {
                    response.sendRedirect("manage-farms?msg=" + URLEncoder.encode("Vui l√≤ng nh·∫≠p l√Ω do c·∫•m ho·∫°t ƒë·ªông", StandardCharsets.UTF_8) + "&" + queryParams);
                    return;
                }

                farm.setStatus("Banned");
                farm.setNote(note.trim());

                boolean success = dao.updateStatusAndNote(farm);

                if (success) {

                    try {
                        dao.banOffersByFarmId(farmId);
                    } catch (Exception ex) {
                        ex.printStackTrace();
                        msg = "ƒê√£ c·∫•m trang tr·∫°i nh∆∞ng l·ªói khi c·∫≠p nh·∫≠t ch√†o b√°n";
                    }

                    msg = "ƒê√£ c·∫•m ho·∫°t ƒë·ªông trang tr·∫°i";
                    Email.sendEmail(
                            farm.getSeller().getEmail(),
                            "Th√¥ng b√°o: Trang tr·∫°i v√† c√°c ch√†o b√°n b·ªã c·∫•m ho·∫°t ƒë·ªông",
                            "Xin ch√†o " + farm.getSeller().getFullName()
                            + ",\n\nCh√∫ng t√¥i xin th√¥ng b√°o r·∫±ng trang tr·∫°i \"" + farm.getFarmName() + "\" c·ªßa b·∫°n ƒë√£ b·ªã **c·∫•m ho·∫°t ƒë·ªông** v·ªõi l√Ω do sau:\n"
                            + "üëâ " + note.trim()
                            + "\n\nTo√†n b·ªô c√°c **ch√†o b√°n** thu·ªôc trang tr·∫°i n√†y c≈©ng ƒë√£ b·ªã **t·∫°m ng∆∞ng** v·ªõi tr·∫°ng th√°i 'B·ªã c·∫•m'."
                            + "\n\nN·∫øu b·∫°n c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o, vui l√≤ng li√™n h·ªá v·ªõi qu·∫£n tr·ªã vi√™n h·ªá th·ªëng ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£."
                            + "\n\nTr√¢n tr·ªçng,\nBan qu·∫£n tr·ªã Online Pig Market"
                    );
                } else {
                    msg = "C·∫•m ho·∫°t ƒë·ªông th·∫•t b·∫°i";
                }
            } else if ("reactivate".equalsIgnoreCase(action)) {
                farm.setStatus("Active");
                farm.setNote("ƒê∆∞·ª£c k√≠ch ho·∫°t l·∫°i");
                boolean success = dao.updateStatusAndNote(farm);

                if (success) {

                    try {
                        dao.unbanOffersByFarmId(farmId);
                    } catch (Exception ex) {
                        ex.printStackTrace();
                        msg = "Trang tr·∫°i ƒë∆∞·ª£c m·ªü l·∫°i nh∆∞ng l·ªói khi c·∫≠p nh·∫≠t ch√†o b√°n.";
                    }

                    msg = "ƒê√£ cho ph√©p ho·∫°t ƒë·ªông l·∫°i trang tr·∫°i";
                    Email.sendEmail(
                            farm.getSeller().getEmail(),
                            "Th√¥ng b√°o: Trang tr·∫°i ƒë√£ ƒë∆∞·ª£c kh√¥i ph·ª•c ho·∫°t ƒë·ªông",
                            "Xin ch√†o " + farm.getSeller().getFullName()
                            + ",\n\nTrang tr·∫°i \"" + farm.getFarmName() + "\" c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c **kh√¥i ph·ª•c tr·∫°ng th√°i ho·∫°t ƒë·ªông** b·ªüi qu·∫£n l√Ω h·ªá th·ªëng."
                            + "\n\nC√°c **ch√†o b√°n tr∆∞·ªõc ƒë√≥ b·ªã c·∫•m** c≈©ng ƒë√£ ƒë∆∞·ª£c chuy·ªÉn sang tr·∫°ng th√°i 'Ng∆∞ng b√°n'."
                            + "\nB·∫°n c√≥ th·ªÉ ƒëƒÉng nh·∫≠p h·ªá th·ªëng v√† c·∫≠p nh·∫≠t l·∫°i c√°c ch√†o b√°n n·∫øu c·∫ßn."
                            + "\n\nTr√¢n tr·ªçng,\nBan qu·∫£n tr·ªã Online Pig Market"
                    );
                } else {
                    msg = "K√≠ch ho·∫°t l·∫°i th·∫•t b·∫°i";
                }
            } else {
                msg = "H√†nh ƒë·ªông kh√¥ng h·ª£p l·ªá";
            }

        } catch (Exception e) {
            e.printStackTrace();
            msg = "C√≥ l·ªói khi g·ª≠i email ho·∫∑c x·ª≠ l√Ω d·ªØ li·ªáu";
        }

        String redirectPage = "approve".equalsIgnoreCase(action) || "reject".equalsIgnoreCase(action) ? "pending-farms" : "manage-farms";
        response.sendRedirect(redirectPage + "?msg=" + URLEncoder.encode(msg, StandardCharsets.UTF_8) + "&" + queryParams);

    }

    @Override
    public String getServletInfo() {
        return "Short description";
    }

}
